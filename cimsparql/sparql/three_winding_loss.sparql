# Name: Three winding loss
PREFIX cim: <${cim}>
PREFIX SN: <${SN}>
PREFIX xsd: <${xsd}>
select ?mrid ?ploss_2
where {

  # Extract mRID and area for each power transformer
  ?p_transformer a cim:PowerTransformer;
           ^cim:PowerTransformerEnd.PowerTransformer/cim:IdentifiedObject.mRID ?mrid;
           cim:Equipment.EquipmentContainer/cim:Substation.Region/cim:SubGeographicalRegion.Region/cim:IdentifiedObject.name ?area .
  filter(regex(?area, '${region}'))
  {
    # Select all three winding transformers
    select  ?p_transformer (count(distinct ?nr) as ?winding_count)
    where {
      ?p_transformer ^cim:PowerTransformerEnd.PowerTransformer/cim:TransformerEnd.endNumber ?nr .
    }
    group by ?p_transformer
    having (?winding_count > 2)
  }
  { select ?p_transformer (sum(xsd:double(str(?sv_p))) / sum(?in_service) as ?ploss_2)
    where
    {
      ?winding cim:PowerTransformerEnd.PowerTransformer ?p_transformer;
               cim:TransformerEnd.Terminal ?terminal .
      optional {service <${repo}> {?winding ^cim:SvStatus.ConductingEquipment/cim:SvStatus.inService ?_in_service .}} .
      service <${repo}> {
        ?terminal cim:Terminal.connected|cim:ACDCTerminal.connected ?connected .
        optional {?terminal ^cim:SvPowerFlow.Terminal/cim:SvPowerFlow.p ?_sv_p  .}
      } .
      bind(if(coalesce(?_in_service, ?connected), 1, 0) as ?in_service) .
      bind(coalesce(?_sv_p, xsd:double(0.0)) as ?sv_p)
    }
    group by ?p_transformer
  }
  optional {?p_transformer SN:Equipment.networkAnalysisEnable ?_network_analysis}
  filter(?network_analysis)
  bind(coalesce(?_network_analysis, True) as ?network_analysis)
}
