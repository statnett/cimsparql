# Name: Three winding with dummy nodes
PREFIX cim:<${cim}>
PREFIX SN:<${SN}>
select ?node ?busname (?container_name as ?substation) ?un (?container_mrid as ?substation_mrid) ?bidzone ?island (False as ?is_swing_bus)
where
{
  # Select all three winding transformerss
  {
    select  ?p_transformer
    where {
      ?p_transformer a cim:PowerTransformer;
		     cim:Equipment.EquipmentContainer/cim:Substation.Region/cim:SubGeographicalRegion.Region/cim:IdentifiedObject.name ?area;
                     ^cim:PowerTransformerEnd.PowerTransformer/cim:TransformerEnd.endNumber ?nr.
      filter(regex(?area, '${region}'))
    }
    group by ?p_transformer
    having (count(*) > 2)
  } .
  ?p_transformer cim:IdentifiedObject.mRID ?node;
		 cim:IdentifiedObject.name ?busname;
                 cim:Equipment.EquipmentContainer ?container.
  ?winding cim:TransformerEnd.endNumber 1;
           cim:PowerTransformerEnd.ratedU ?un;
           cim:PowerTransformerEnd.PowerTransformer ?p_transformer;
	   cim:TransformerEnd.Terminal/cim:Terminal.ConnectivityNode ?con_node.
  ?container cim:IdentifiedObject.mRID ?container_mrid;
	     cim:IdentifiedObject.name ?container_name.
  service <${repo}> {
    optional{
      ?con_node cim:ConnectivityNode.TopologicalNode ?top_node .
      ?top_node ^cim:TopologicalIsland.TopologicalNodes/cim:IdentifiedObject.name ?island_name
    }.
    bind(coalesce(?island_name, "Unknown") as ?island)
  }
  optional {?container SN:Substation.MarketDeliveryPoint/SN:MarketDeliveryPoint.BiddingArea/SN:BiddingArea.marketCode ?bidzone}
  optional {?p_transformer SN:Equipment.networkAnalysisEnable ?_network_analysis}
  filter(?network_analysis)
  bind(coalesce(?_network_analysis, True) as ?network_analysis)
}
