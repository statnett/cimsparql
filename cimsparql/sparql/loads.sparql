# Name: Loads
PREFIX cim: <${cim}>
PREFIX SN: <${SN}>
select ?mrid ?name ?node ?substation_mrid ?bidzone ?status ?p ?q ?station_group
where {

  # Extrcact connected flag and optionally the mRID of the topological node associated with the terminal
  ?terminal cim:ACDCTerminal.connected ?connected .
  optional {?terminal cim:Terminal.TopologicalNode/cim:IdentifiedObject.mRID ?term_top_node_mrid}

  # Optionally extract the mRID of the topological node for the connectivity node associated with each terminal
  optional {?con_node cim:ConnectivityNode.TopologicalNode/cim:IdentifiedObject.mRID ?con_top_node_mrid .}

  # Optionally extract in_service flag and active and reactive energy consumption for each load
  optional {?load ^cim:SvStatus.ConductingEquipment/cim:SvStatus.inService ?in_service }.
  ?load cim:EnergyConsumer.p ?p; cim:EnergyConsumer.q ?q .

  service <${eq_repo}> {
  # Declare which load types to consider
  values ?load_type {cim:ConformLoad cim:NonConformLoad cim:EnergyConsumer}

  # Extract mRID, name and substation for each load
  ?load a ?load_type;
         cim:IdentifiedObject.mRID ?mrid;
         cim:IdentifiedObject.name ?name;
         cim:Equipment.EquipmentContainer/cim:VoltageLevel.Substation ?substation.

  # Extract area and mRID (referred to as 'station') for the substation of each load
  ?substation cim:Substation.Region/cim:SubGeographicalRegion.Region/cim:IdentifiedObject.name ?area;
               cim:IdentifiedObject.mRID ?substation_mrid .
  filter regex(?area, '${region}')

  # Optionally extract bidzone for each substation and station_group for each load
  optional {?substation SN:Substation.MarketDeliveryPoint/SN:MarketDeliveryPoint.BiddingArea/SN:BiddingArea.marketCode ?bidzone} .
  optional {?load cim:NonConformLoad.LoadGroup/SN:NonConformLoadGroup.ScheduleResource/SN:ScheduleResource.marketCode ?station_group} .
  optional {?load SN:Equipment.networkAnalysisEnable ?_network_analysis} .
  bind(coalesce(?_network_analysis, True) as ?network_analysis)
  filter (?network_analysis)

  # Extract mRID and connectivity node for each terminal associated with a load
  ?terminal cim:Terminal.ConductingEquipment ?load;
           cim:Terminal.ConnectivityNode ?con_node .
  }

  # Assign status flag for load. The status flag is set to the first existing of
  # 1) in_service flag
  # 2) connected flag the terminal
  bind(coalesce(?in_service, ?connected) as ?status)

  # Assign mRID to the ?node variable. The mRID is set to the first existing of
  # 1) mRID of the topoligical node associated with a connectivity node for the terminal for each load
  # 2) mRID of the topological node associated with the terminal for each load
  bind(coalesce(?con_top_node_mrid, ?term_top_node_mrid) as ?node)
  filter(?node)
}
