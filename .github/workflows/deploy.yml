---
name: Deploy to PyPI

on:
  release:
    types: [created]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress
# and latest queued.  However, do NOT cancel in-progress runs as we want to allow these
# production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false


jobs:
  build_and_publish_pypi:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'statnett'
    permissions:
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install and configure Poetry
        uses: abatilo/actions-poetry@v2.3.0
        with:
          poetry-version: 1.6.1
      - name: Install dynamic versioning
        run: poetry self add "poetry-dynamic-versioning[plugin]"
      - name: build package
        run: |
          poetry build
      - name: Publish package distributions to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  build_docs:
    needs: build_and_publish_pypi
    runs-on: ubuntu-latest
    if: github.repository_owner == 'statnett'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install and configure Poetry
        uses: abatilo/actions-poetry@v2.3.0
        with:
          poetry-version: 1.6.1
      - name: Install dynamic versioning
        run: poetry self add "poetry-dynamic-versioning[plugin]"
      - name: Install dependencies
        shell: bash
        run: poetry install
      - name: install dependencies
        run: |
          poetry install --with docs
      - name: build docs
        run: |
          poetry run sphinx-build docs html
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: html

  # Deployment job
  deploy_docs:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build_docs
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
