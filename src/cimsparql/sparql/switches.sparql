# Name: Switches
PREFIX cim: <${cim}>
SELECT ?mrid ?is_open (STRAFTER(STR(?type),"#") AS ?equipment_type) ?connectivity_node_1 ?connectivity_node_2 ?name WHERE {
  {
    SELECT * {
      ?_eq_subject <http://entsoe.eu/CIM/EquipmentCore/3/1> ?eq_repo .
      SERVICE ?eq_repo {
        {
          # Extract the maximum terminal number per switch. This number is used to deduce the second terminal
          # Normally this equals 2, but occasionally it can be one. In that case it means that the switch
          # has only one termainal. A switch with only one terminal can not connect or disconnect anything
          # which is equivalent of setting terminal 2 equal to terminal 1
          SELECT (?internal_switch AS ?switch) (MAX(?nr) AS ?max_terminal_number) {
            ?internal_switch cim:Switch.normalOpen ?_unused_normal_open ;
                             ^cim:Terminal.ConductingEquipment/cim:ACDCTerminal.sequenceNumber ?nr
          }
          GROUP BY ?internal_switch
        }
        VALUES ?type { cim:Breaker cim:Disconnector cim:GroundDisconnector cim:LoadBreakSwitch cim:Recloser cim:MktSwitch cim:Fuse cim:Sectionaliser cim:Cut cim:Jumper }
        ?switch cim:IdentifiedObject.mRID ?mrid ;
                a ?type ;
                cim:Switch.normalOpen ?normal_open ;
                ^cim:Terminal.ConductingEquipment ?terminal1 ;
                ^cim:Terminal.ConductingEquipment ?terminal2 ;
                cim:IdentifiedObject.name ?name .
        ?terminal1 cim:ACDCTerminal.sequenceNumber 1 ;
                   cim:Terminal.ConnectivityNode/cim:IdentifiedObject.mRID ?connectivity_node_1 .
        ?terminal2 cim:ACDCTerminal.sequenceNumber ?max_terminal_number ;
                   cim:Terminal.ConnectivityNode/cim:IdentifiedObject.mRID ?connectivity_node_2 .
      }
    }
  }
  OPTIONAL {
    ?switch cim:Switch.open ?ssh_is_open
  }
  BIND (COALESCE(?ssh_is_open, ?normal_open) AS ?is_open)
}
